<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">

    <!--  Menu button  -->
    <Style x:Key="menuButtonStyle" TargetType="RadioButton">
        <Setter Property="GroupName" Value="ViewsButtonGroup" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource MenuForegroundColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        Margin="0,0,0,60"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="10,0,0,0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--  Button Style on hover  -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Foreground" Value="{StaticResource OverMenuButtonBorderColor}" />
                <Setter Property="BorderBrush" Value="{StaticResource OverMenuButtonBorderColor}" />
            </Trigger>

            <!--  Activated button style  -->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource OverMenuButtonBorderColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Menu button Style For CurrentUser and SignOut  -->
    <Style
        x:Key="menuButtonStyleV2"
        BasedOn="{StaticResource menuButtonStyle}"
        TargetType="RadioButton">
        <!--  Button Style on hover  -->
        <Style.Triggers>
            <!--  Activated button style  -->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Menu button icon  -->
    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="20,0,20,0" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    BlurRadius="4"
                    Opacity="25"
                    ShadowDepth="2.5"
                    Color="Gray" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Control bar button  -->
    <Style x:Key="controlButton" TargetType="Button">
        <!--  Normal button style  -->
        <Setter Property="Width" Value="35" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource actionButtonsColor}" />
        <Setter Property="Margin" Value="10,5,0,0" />
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  Menu button icon  -->
    <Style x:Key="controlButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="15" />

    </Style>
    <!--  Icon button  -->
    <Style x:Key="iconButton" TargetType="Button">
        <!--  Normal button style  -->
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource actionButtonsColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  Menu button icon  -->
    <Style x:Key="iconButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
    </Style>
    <!--  Menu button text  -->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
        <Setter Property="FontFamily" Value="Montserrat" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontSize" Value="13.5" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!--  Card Button  -->
    <Style x:Key="CardButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource SFUIDisplay}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource SecundarySolidColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource SecundarySolidColor}" />
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderThickness" Value="5" />
                <Setter Property="BorderBrush" Value="{StaticResource primaryGradientColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--#region Add Button-->
    <Style x:Key="BtnAgregarStyle" TargetType="Button">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#1e355e" />
        <Setter Property="Foreground" Value="#1e355e" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Padding="5"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="2"
                        CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Icon add Style  -->
    <Style x:Key="AddIconStyle" TargetType="fa:IconImage">
        <Setter Property="Icon" Value="CirclePlus" />
        <Setter Property="Foreground" Value="#1e355e" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="3" />
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <!--  TextBlock add Style  -->
    <Style x:Key="TextBlockAddStyle" TargetType="TextBlock">
        <Setter Property="Text" Value="Agregar" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Foreground" Value="#1e355e" />
        <Setter Property="VerticalAlignment" Value="center" />
        <Setter Property="Margin" Value="10,0,10,0" />
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <!--#endregion  Add Button-->


    <!--#region grid Edit Button-->
    <Style
        x:Key="GridEditButton"
        BasedOn="{StaticResource BtnAgregarStyle}"
        TargetType="Button">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#1e355e" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  grid Icon Style  -->
    <Style x:Key="gridEditIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="#1e355e" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Icon" Value="Trash" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion grid Edit Button-->


    <!--#region grid Delete Button-->
    <Style
        x:Key="GridDeleteButton"
        BasedOn="{StaticResource BtnAgregarStyle}"
        TargetType="Button">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  grid Delete Icon Style  -->
    <Style x:Key="gridDeleteIcon" TargetType="fa:IconImage">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Icon" Value="Trash" />
        <Setter Property="Foreground" Value="#1e355e" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion grid Delete Button-->

</ResourceDictionary>